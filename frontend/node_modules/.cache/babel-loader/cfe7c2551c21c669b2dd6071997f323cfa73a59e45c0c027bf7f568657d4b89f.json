{"ast":null,"code":"var _jsxFileName = \"/Users/oreoluwaala/Documents/smartcents/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  setToken\n}) => {\n  _s();\n  //persistence and vaigation\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/login', {\n        username,\n        password\n      });\n      const token = response.data.token;\n      setToken(token);\n      localStorage.setItem('token', token);\n      setMessage('Login successful');\n\n      // Decode the token to extract the userId\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.user_id; // JWT including 'user_id'\n\n      // navigate to account page and successful login\n      navigate(`/account/${username}`);\n    } catch (error) {\n      setMessage('Invalid username or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"eqKp26thtn4/43TzJV2g5Njd23Y=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","LoginForm","setToken","_s","username","setUsername","password","setPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","response","post","token","data","localStorage","setItem","decodedToken","userId","user_id","error","id","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oreoluwaala/Documents/smartcents/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; \nimport { jwtDecode } from 'jwt-decode';\n\nconst LoginForm = ({ setToken }) => {\n    //persistence and vaigation\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/login', { username, password });\n            const token = response.data.token;\n            setToken(token);\n            localStorage.setItem('token', token);\n            setMessage('Login successful');\n\n            // Decode the token to extract the userId\n            const decodedToken = jwtDecode(token);\n            const userId = decodedToken.user_id; // JWT including 'user_id'\n\n            // navigate to account page and successful login\n            navigate(`/account/${username}`);\n        } catch (error) {\n            setMessage('Invalid username or password');\n        }\n    };\n\n    return (\n        <div id=\"login\">\n            <div id=\"login-form\">\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        required\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                    <button type=\"submit\">Login</button>\n                    {message && <p>{message}</p>}\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}